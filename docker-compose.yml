# services:
#   torchserve:
#     build:
#       context: ./AnimatedDrawingsAPI/sources/torchserve/
#       dockerfile: Dockerfile
#     expose:
#       - 8080
#       - 8081
#     restart: always
#     deploy:
#       resources:
#         limits:
#           cpus: '0.25'
#           memory: 64g
#     networks:
#       ad_server: {}

#   animated_drawings:
#     depends_on:
#       - torchserve
#     build:
#       context: .
#       dockerfile: ./AnimatedDrawingsAPI/animated_drawings.Dockerfile
#     expose:
#       - 8001
#     volumes:
#       - ./AnimatedDrawingsAPI:/mycode/AnimatedDrawingsAPI
#       - ./files:/mycode/files
#     entrypoint: conda run --no-capture-output -n animated_drawings python -u /mycode/AnimatedDrawingsAPI/main.py
#     restart: always
#     networks:
#       ad_server: {}

#   ad_fast_api:
#     depends_on:
#       - animated_drawings
#     build:
#       context: .
#       dockerfile: ./ADFastAPI/ad_fast_api.Dockerfile
#     ports:
#       - ${EXTERNAL_PORT}:8000
#     volumes:
#       - ./ADFastAPI:/mycode/ADFastAPI
#       - ./files:/mycode/files
#     entrypoint: python /mycode/ADFastAPI/main.py
#     restart: always
#     networks:
#       ad_server: {}

# networks:
#   ad_server:
#     name: ${NETWORK_NAME}
#     driver: bridge


services:
  # torchserve:
  #   build:
  #     context: ./AnimatedDrawingsAPI/sources/torchserve/
  #     dockerfile: Dockerfile
  #   expose:
  #     - 8080
  #     - 8081
  #   restart: always
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.25'
  #         memory: 64g
  #   networks:
  #     ad_server: {}

  animated_drawings:
    # depends_on:
    #   - torchserve
    build:
      context: ./animated_drawings
      dockerfile: ./animated_drawings.Dockerfile
      args:
        WORK_DIR: ${ROOT_DIR}
        INTERNAL_PORT: ${ANIMATED_DRAWINGS_INTERNAL_PORT}
        ANIMATED_DRAWINGS_WORKSPACE_DIR: ${ANIMATED_DRAWINGS_WORKSPACE_DIR}
    expose:
      - ${ANIMATED_DRAWINGS_INTERNAL_PORT}
    volumes:
      - ./workspace:/${ROOT_DIR}/${ANIMATED_DRAWINGS_WORKSPACE_DIR}
    # restart: always
    networks:
      ad_server: {}

  ad_fast_api:
    depends_on:
      - animated_drawings
    build:
      context: ./ad_fast_api
      dockerfile: ./ad_fast_api.Dockerfile
      args:
        WORK_DIR: ${ROOT_DIR}
        INTERNAL_PORT: ${AD_FAST_API_INTERNAL_PORT}
        ANIMATED_DRAWINGS_WORKSPACE_DIR: ${ANIMATED_DRAWINGS_WORKSPACE_DIR}
    ports:
      - ${AD_FAST_API_EXTERNAL_PORT}:${AD_FAST_API_INTERNAL_PORT}
    volumes:
      - ./ad_fast_api:/${ROOT_DIR}
      - ./workspace/files:/${ROOT_DIR}/ad_fast_api/workspace/files
    # restart: always
    networks:
      ad_server: {}

networks:
  ad_server:
    name: ${NETWORK_NAME}
    driver: bridge