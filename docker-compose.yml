services:
  ad_torchserve:
    container_name: ad_torchserve
    build:
      context: ./modules/ad_torchserve
      dockerfile: ./ad_torchserve.Dockerfile
    # restart: always
    # expose:
    #   - 8080
    #   - 8081
    # use ports only case test or locust test
    ports:
      - 8080:8080
      - 8081:8081
    # you can use limit system resources
    # deploy:
    #   resources:
    #     limits:
    #       cpus: 0.5
    #       memory: 64g
    networks:
      ad_server: {}

  animated_drawings:
    container_name: animated_drawings
    build:
      context: ./modules/ad_animated_drawings
      dockerfile: ./ad_animated_drawings.Dockerfile
      args:
        ROOT_DIR: ${ROOT_DIR}
        INTERNAL_PORT: ${ANIMATED_DRAWINGS_INTERNAL_PORT}
        ANIMATED_DRAWINGS_WORKSPACE_DIR: ${ANIMATED_DRAWINGS_WORKSPACE_DIR}
    volumes:
      - ./modules/ad_fast_api/ad_fast_api/workspace/files:/${ROOT_DIR}/${ANIMATED_DRAWINGS_WORKSPACE_DIR}/files
      - ./modules/ad_fast_api/ad_fast_api/workspace/config:/${ROOT_DIR}/${ANIMATED_DRAWINGS_WORKSPACE_DIR}/config
    # restart: always
    expose:
      - ${ANIMATED_DRAWINGS_INTERNAL_PORT}
    # use ports only case test or locust test
    # ports:
    #   - ${ANIMATED_DRAWINGS_INTERNAL_PORT}:${ANIMATED_DRAWINGS_INTERNAL_PORT}
    # you can use limit system resources
    # deploy: 
    #   resources:
    #     limits:
    #       cpus: 0.5
    #       memory: 64g
    networks:
      ad_server: {}

  ad_fast_api:
    container_name: ad_fast_api
    build:
      context: ./modules/ad_fast_api
      dockerfile: ./ad_fast_api.Dockerfile
      args:
        ROOT_DIR: ${ROOT_DIR}
        INTERNAL_PORT: ${AD_FAST_API_INTERNAL_PORT}
        ANIMATED_DRAWINGS_WORKSPACE_DIR: ${ANIMATED_DRAWINGS_WORKSPACE_DIR}
    # restart: always
    ports:
      - ${AD_FAST_API_EXTERNAL_PORT}:${AD_FAST_API_INTERNAL_PORT}
    volumes:
      - ./modules/ad_fast_api/ad_fast_api:/${ROOT_DIR}/ad_fast_api/
    # you can use limit system resources
    # deploy:
    #   resources:
    #     limits:
    #       cpus: 0.5
    #       memory: 64g
    networks:
      ad_server: {}

networks:
  ad_server:
    name: ${NETWORK_NAME}
    driver: bridge